#spring.datasource.url= jdbc:mysql://localhost:3308/employees?useSsl=fals
#Since now we are using this application in a container so it will not able to fnd the localhost:3308 port inside that container as it is in the system
#So we will link this with the mysql container by providing it ip address
spring.datasource.url= jdbc:mysql://172.17.0.8:3306/employee?useSsl=false
#Here 172.17.0.7 is the mysql container ip and 3306 is inbound port to connect with it
#If we are using container ip then we should use inbound port for communicaton
#if we are using host machine then we should use outbound port for communication
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


#spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/classicmodels2?useSSL=false
#spring.datasource.hikari.password=root
#spring.datasource.hikari.username=root
#spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.main.banner-mode=off

#Loggin Details
#logging.level.org.springringframework=info
#logging.level.com.tavant.com.tavant.springboot=info
#logging.level.com.com.zaxxer=debug
#logging.level.root=error
logging.level.web=debug

#Spring data jpa properties
spring.jpa.hibernate.ddl-auto=update
#This create will create all your tables with condition
#If table exist then it will drop the table then it will create a new one
#this activity will happen on every execution
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
#It will load all the flag lazily
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#It is used to allow jpa to accept the field name as given in class
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

#To use our own naming convention to add tbl after each table name
#spring.jpa.hibernate.naming.physical-strategy=com.tavant.springboot.utils.TavantPhysicalNamingStrategy

# If Http port 8080 error is coming then provide other port number
#server.port=9000

#To be used by eureka server
#server.port = 9001
# Instead of setting port manually, we wil set port for load balancing so that we cn run multiple instance of same application at a time
server.port = ${PORT:0}
spring.application.name=employee-service


#register to eureka server
eureka.client.service-url.default-zone = http://localhost:8761/eureka
# eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka
eureka.instance.instance-id = ${spring.application.name}:${spring.application.instance_id:${random.value}}
